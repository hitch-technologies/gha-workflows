name: "PR Cleanup workflow"

on:
  workflow_call:

    inputs:
      SLACK_PR_CHANNEL_ID:
        type: string
        required: true
        description: '#gh-deploy-dev ID'
      KUSTOMIZE_OVERLAY:
        type: string
        required: true
        description: 'Path to Kustomize overlay'
      KUSTOMIZE_ROOT:
        type: string
        required: true
        description: 'Path to Kustomize root'
      HOSTED_ZONE_ID_INT:
        type: string
        required: true
        description: 'R53 Hosted Zone ID'
      DOMAIN_INT:
        type: string
        required: true
        description: 'internal dev domain'
      DOMAIN_INT_ELB:
        type: string
        required: true
        description: 'internal dev elb'
    secrets:
      slack-bot-token:
        required: true
      aws-access-key-id:
        required: true
      aws-secret-access-key:
        required: true
      aws-region:
        required: true
      dockerhub-username:
        required: true
      dockerhub-token:
        required: true

jobs:
  workflow:
    runs-on: small-runner
    outputs:
      TAG: ${{ env.TAG }}
      SLACK_MESSAGE_ID: ${{ steps.gh-cleanup-dev.outputs.message_id }}
      GITHUB_ACTOR: ${{ env.GITHUB_ACTOR }}
      
    steps:
      - name: Set environment variables
        run: |
          RUN=pr-${{ github.event.number }}-${{ github.run_number }}
          TAG=pr-${{ github.event.number }}
          echo "TAG=pr-${{ github.event.number }}" >> $GITHUB_ENV
          echo "RUN=pr-${{ github.event.number }}-${{ github.run_number }}" >> $GITHUB_ENV
          echo "GITHUB_ACTOR=${GITHUB_ACTOR}" >> $GITHUB_ENV
          echo "JOB_URL=${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.dockerhub-username }}
          password: ${{ secrets.dockerhub-token }}

      - name: Notify Slack of Cleanup
        id: gh-cleanup-dev
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel_id: ${{ inputs.SLACK_PR_CHANNEL_ID }}
          status: |
            ${{ env.TAG }} closed. Recycling...

            - Run: ${{ env.RUN }}
            - Image Tag: ${{ env.TAG }}
            - Actor: ${{ env.GITHUB_ACTOR }}
            - Job URL: ${{ env.JOB_URL }}
          color: warning
        env:
          SLACK_BOT_TOKEN: ${{ secrets.slack-bot-token }}

      # TODO: Check if external-dns can offload this step
      # - name: "Delete PR DNS Record "
      #   uses: Roosterfish/aws-route53-record-set-action@master
      #   with: 
      #     aws_access_key_id: ${{ secrets.aws-access-key-id }}
      #     aws_secret_access_key: ${{ secrets.aws-secret-access-key }}
      #     aws_route53_hosted_zone_id: ${{ inputs.HOSTED_ZONE_ID_INT }}
      #     aws_route53_rr_action: "DELETE"
      #     aws_route53_rr_name: ${{ env.TAG }}.int.sxdev.io
      #     aws_route53_rr_type: "CNAME"
      #     aws_route53_rr_ttl: "300"
      #     aws_route53_rr_value: "${{ inputs.DOMAIN_INT_ELB }}"
          
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
                
      - name: Inject image tag into files
        run: |
          sudo apt-get update -y
          sudo apt-get install gettext -y
          FILES=(${{ inputs.KUSTOMIZE_ROOT }}/base/* ${{ inputs.KUSTOMIZE_ROOT }}/overlays/dev/*)
          for FILE in ${FILES[@]}; do
            if [[ -n ${PATTERN} ]] ; then
              envsubst "${PATTERN}" < $FILE > /tmp/envsubst || exit 1
            else
              envsubst < $FILE > /tmp/envsubst || exit 1
            fi
            mv /tmp/envsubst $FILE || exit 1
          done
        env:
          PATTERN: $TAG 

      - name: Delete PR from cluster
        uses: hitch-technologies/gha-workflows/actions/delete@main
        with:
          KUSTOMIZE_OVERLAY: ${{ inputs.KUSTOMIZE_OVERLAY }}

      - name: Notify Slack of Success
        if: success()
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel_id: ${{ inputs.SLACK_PR_CHANNEL_ID }}
          message_id: ${{ steps.gh-cleanup-dev.outputs.message_id }}
          status: |
            ${{ env.TAG }} closed and recycled

            - Run: ${{ env.RUN }}
            - Image Tag: ${{ env.TAG }}
            - Actor: ${{ env.GITHUB_ACTOR }}
            - Job URL: ${{ env.JOB_URL }}
          color: good
        env:
          SLACK_BOT_TOKEN: ${{ secrets.slack-bot-token }} 

      - name: Notify Slack of Failure
        if: failure()
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel_id: ${{ inputs.SLACK_PR_CHANNEL_ID }}
          message_id: ${{ steps.gh-cleanup-dev.outputs.message_id }}
          status: |
            ${{ env.TAG }} closed. Recycling failed

            - Run: ${{ env.RUN }}
            - Image Tag: ${{ env.TAG }}
            - Actor: ${{ env.GITHUB_ACTOR }}
            - Job URL: ${{ env.JOB_URL }}
          color: danger
        env:
          SLACK_BOT_TOKEN: ${{ secrets.slack-bot-token }} 