name: "Deploy to Development"

on:
  workflow_call:
  
    inputs:
      SLACK_DEPLOY_CHANNEL_ID:
        type: string
        required: true
      ECR_FULL_PATH:
        type: string
        required: true
        description: 'Elastic Container Repository of the service'
      KUSTOMIZE:
        type: string
        required: true
        description: 'Path to service code'
      DEPLOYMENT_REPO:
        type: string
        required: true
        description: 'Deployment Repository'
      ARGO_ROLLOUTS_URL:
        type: string
        required: true
        description: 'Deployment Repository'
        
    secrets:
      slack-bot-token:
        required: true
      aws-access-key-id:
        required: true
      aws-secret-access-key:
        required: true
      aws-region:
        required: true
      gh-pat:
        required: true
      dockerhub-username:
        required: true
      dockerhub-token:
        required: true
        
jobs:
  workflow:
    runs-on: small-runner
    outputs:
      TAG: ${{ env.TAG }}
      GITHUB_ACTOR: ${{ env.GITHUB_ACTOR }}

    steps:
      - name: Set environment variables
        run: |
          echo "SHORT_COMMIT=`echo ${GITHUB_SHA} | cut -c1-7`" >> $GITHUB_ENV
          echo "BRANCH_NAME=${GITHUB_REF##*/}" >> $GITHUB_ENV
          echo "TAG=${GITHUB_REF##*/}-`echo ${GITHUB_SHA} | cut -c1-7`" >> $GITHUB_ENV
          echo "GITHUB_ACTOR=${GITHUB_ACTOR}" >> $GITHUB_ENV
          echo "JOB_URL=${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.dockerhub-username }}
          password: ${{ secrets.dockerhub-token }}

      - name: Notify Slack of Deployment
        id: gh-deploy-prod
        uses: hitch-technologies/gha-workflows/actions/github-action-slack-notify-build@main
        with:
          channel_id: ${{ inputs.SLACK_DEPLOY_CHANNEL_ID }}
          status: |
            Deploying Image on Development

            - Image Tag: ${{ env.TAG }}
            - Actor: ${{ env.GITHUB_ACTOR }}
            - Job URL: ${{ env.JOB_URL }}
          color: 0037FF
        env:
          SLACK_BOT_TOKEN: ${{ secrets.slack-bot-token }}

      - name: Checkout cd-deployment repo
        uses: actions/checkout@v3
        with:
          repository: hitch-technologies/cd-deployments
          token: ${{ secrets.gh-pat }}
          ref: main

      - name: Download GQL Scheme
        uses: actions/download-artifact@v3
        with:
          path: .
          name: ${{ inputs.ECR_REPO }}-gql-scheme
          if-no-files-found: warn

      - name: Install Rover
        run: |
          curl -sSL https://rover.apollo.dev/nix/v0.1.0 | sh

          # Add Rover to the $GITHUB_PATH so it can be used in another step
          echo "$HOME/.rover/bin" >> $GITHUB_PATH

      - name: Publish Service Subgraph
        env:
          APOLLO_KEY: ${{ secrets.GATEWAY_SERVICE_APOLLO_KEY }}
          APOLLO_VCS_COMMIT: ${{ github.event.pull_request.head.sha }}
        run: |
          rover subgraph publish Supergraph-nsal4s@{{ env.TAG }} \
          --schema "./src/gql/schema.graphql" \
          --name ${{ inputs.ECR_REPO }} \
          --routing-url "${{ inputs.SERVICE }}/graphql"


      - name: Setup Kustomize
        uses: imranismail/setup-kustomize@v1

      - name: Update Kubernetes resources
        run: |
          cd ${{ inputs.KUSTOMIZE }}
          kustomize edit set image ${{ inputs.ECR_FULL_PATH }}:OLD_TAG=${{ inputs.ECR_FULL_PATH }}:${{ env.TAG }}
          
      - name: Commit files
        run: |
          git config --global user.email "devops@hitch.net"
          git config --global user.name "Hitch-DevOps"
          git commit -am "New Deploy ${{ env.TAG }} by ${{ env.GITHUB_ACTOR }}"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          repository: ${{ inputs.DEPLOYMENT_REPO }}
          github_token: ${{ secrets.gh-pat }}
          branch: main

      - name: Notify Slack of Success
        if: success()
        uses: hitch-technologies/gha-workflows/actions/github-action-slack-notify-build@main
        with:
          channel_id: ${{ inputs.SLACK_DEPLOY_CHANNEL_ID }}
          message_id: ${{ steps.gh-deploy-prod.outputs.message_id }}
          status: |
            Argo Rollouts Deployment Created

            - Argo Rollouts: ${{ inputs.ARGO_ROLLOUTS_URL }}
            - Image Tag: ${{ env.TAG }}
            - Actor: ${{ env.GITHUB_ACTOR }}
            - Job URL: ${{ env.JOB_URL }}
          color: good
        env:
          SLACK_BOT_TOKEN: ${{ secrets.slack-bot-token }}

      - name: Notify Slack of Failure
        if: failure()
        uses: hitch-technologies/gha-workflows/actions/github-action-slack-notify-build@main
        with:
          channel_id: ${{ inputs.SLACK_DEPLOY_CHANNEL_ID }}
          message_id: ${{ steps.gh-deploy-prod.outputs.message_id }}
          status: |
            Argo Rollouts Deployment Failed

            - Argo Rollouts: ${{ inputs.ARGO_ROLLOUTS_URL }}
            - Image Tag: ${{ env.TAG }}
            - Actor: ${{ env.GITHUB_ACTOR }}
            - Job URL: ${{ env.JOB_URL }}
          color: danger
        env:
          SLACK_BOT_TOKEN: ${{ secrets.slack-bot-token }}
