name: 'Deploy PR'
description: 'PR Deployment'

inputs:
  KUSTOMIZE_OVERLAY:
    description: 'path to kustomize overlay'
    required: true
  NAMESPACE:
    description: 'Namespace name'
    required: true
  SERVICE:
    description: 'Service name'
    required: true

runs:
  using: "composite"
  steps:
    - name: install kubectl, kustomize the deployment, deploy
      shell: bash
      run: |
        echo "Setting up KUBECTL"
        curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
        chmod +x ./kubectl
        sudo mv ./kubectl /usr/local/bin/kubectl
        echo "Setting up yq"
        curl -Lo yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
        chmod +x ./yq
        sudo mv ./yq /usr/local/bin/yq
        echo "Syncing Secret and Configmap"
        kubectl get -o yaml secret ${{ inputs.SERVICE }} -n ${{ inputs.NAMESPACE }} | yq 'del(.metadata.ownerReferences, .metadata.creationTimestamp, .metadata.resourceVersion, .metadata.uid )' | yq -e '.metadata.namespace = "${{ inputs.NAMESPACE }}-pr"' | kubectl apply -f -
        kubectl get -o yaml configmap ${{ inputs.SERVICE }} -n ${{ inputs.NAMESPACE }} | yq 'del(.metadata.ownerReferences, .metadata.creationTimestamp, .metadata.resourceVersion, .metadata.uid )' | yq -e '.metadata.namespace = "${{ inputs.NAMESPACE }}-pr"' | kubectl apply -f -
        echo "Deploying"
        kubectl apply -k ${{ inputs.KUSTOMIZE_OVERLAY }}
